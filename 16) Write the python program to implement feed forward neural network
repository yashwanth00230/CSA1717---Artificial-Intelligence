import numpy as np
def sigmoid(x):
    return 1 / (1 + np.exp(-x))
def relu(x):
    return np.maximum(0, x)
def initialize_parameters(input_size, hidden_size, output_size):
    np.random.seed(42)
    W1 = np.random.randn(hidden_size, input_size)
    b1 = np.zeros((hidden_size, 1))
    W2 = np.random.randn(output_size, hidden_size)
    b2 = np.zeros((output_size, 1))
    return W1, b1, W2, b2
def forward_propagation(X, W1, b1, W2, b2):
    Z1 = np.dot(W1, X) + b1
    A1 = relu(Z1)  
    Z2 = np.dot(W2, A1) + b2
    A2 = sigmoid(Z2)  
    return A2
X = np.array([[0.5], [0.1], [0.3]])  
input_size = 3
hidden_size = 4
output_size = 1
W1, b1, W2, b2 = initialize_parameters(input_size, hidden_size, output_size)
output = forward_propagation(X, W1, b1, W2, b2)
print("Output of FFNN:", output)



OUTPUT :-
Output of FFNN: [[0.07774434]]
